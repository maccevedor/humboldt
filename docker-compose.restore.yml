version: "3.8"

services:
  db_restore:
    # image: postgres:16-alpine
    image: postgis/postgis:16-3.4-alpine
    container_name: visor_i2d_db_restore
    environment:
      # - POSTGRES_DB=i2d_db_restore
      - POSTGRES_DB=i2d_db
      - POSTGRES_USER=i2d_user
      - POSTGRES_PASSWORD=i2d_password
      - POSTGRES_HOST_AUTH_METHOD=trust
      # Memory optimization settings
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_MAX_CONNECTIONS=50
      - POSTGRES_WORK_MEM=4MB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
      - POSTGRES_WAL_BUFFERS=16MB
    volumes:
      - postgres_data_restore:/var/lib/postgresql/data/
      - /home/mrueda/WWW/visor.dump:/visor.dump
    ports:
      - "5433:5432"
    networks:
      - humboldt_visor_network
    # command: >
    #   bash -c "
    #     echo 'Starting PostgreSQL with memory optimization...' &&
    #     docker-entrypoint.sh postgres &
    #     PID=$$! &&
    #     sleep 15 &&
    #     echo 'Loading backup with streaming...' &&
    #     # Use streaming approach to avoid memory issues
    #     cat /backup/dump_parcial_20250804.sql | psql -U i2d_user -d i2d_db_restore &&
    #     echo 'Backup loaded successfully!' &&
    #     wait $$PID
    #   "
    deploy:
      resources:
        limits:
          memory: 12G
        reservations:
          memory: 4G

volumes:
  postgres_data_restore:

networks:
  humboldt_visor_network:
    external: true
